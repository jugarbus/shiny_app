"0","ui <- navbarPage(theme = shinytheme(""yeti""), ""App Máster Ciencia de Datos"","
"0","                 "
"0","                "
"0","  tags$head("
"0","    includeCSS(""www/styles.css"")  "
"0","  ),"
"0","                 "
"0","  tabPanel(""Selección de máquina"", "
"0","           sidebarLayout("
"0","             sidebarPanel("
"0","               h5(""MÁQUINA""), "
"0","               fileInput(""DatosFichero"", ""Selecciona un fichero""),"
"0","               uiOutput(""select_matricula""),"
"0","              ),"
"0","             mainPanel("
"0","               h5(""Probabilidad de orden""), "
"0","               plotOutput('graf1')"
"0","             )"
"0","           )"
"0","  ),"
"0","  "
"0","navbarMenu(""Estado de la máquina"","
"0","           tabPanel(""Evolución temporal alarmas"", "
"0","                    sidebarLayout("
"0","                      sidebarPanel("
"0","                         h5(""Filtrar por estado de alarma""),"
"0","                        radioButtons(""estado_alarma1"", ""Selecciona estado de alarma"", "
"0","                                     choices = c(""Activas"" = ""activa"", ""Inactivas"" = ""inactiva"")),"
"0","                        h5(""Selecciona una alarma""),"
"0","                        uiOutput(""select_alarmas_radio"")"
"0","                      ),"
"0","                      mainPanel("
"0","                        h5(""Evolución temporal alarmas""), "
"0","                        plotlyOutput('graf2')"
"0","                      )"
"0","                    )"
"0","           ),"
"0","           tabPanel(""Registros de la máquina"", "
"0","                     sidebarLayout("
"0","                        sidebarPanel("
"0","                          h5(""Filtrar por estado de alarma""),"
"0","                          radioButtons(""estado_alarma2"", ""Selecciona estado de alarma"", "
"0","                                       choices = c(""Activas"" = ""activa"", ""Inactivas"" = ""inactiva"")),"
"0","                          uiOutput(""select_alarmas_check"") # Checkboxes dinámico"
"0","                        ),"
"0","                        mainPanel(h5(""Registros de la máquina seleccionada""), dataTableOutput('tabla1'))"
"0","                    )"
"0","           )"
"0","),"
"0","  "
"0"," tabPanel(""Estadísticas Globales Temporales"", "
"0","         sidebarLayout("
"0","           sidebarPanel("
"0","             h5(""PERIODO Y ESTADÍSTICAS""), "
"0","             dateRangeInput('rango_fecha', label = 'Selecciona el periodo', "
"0","                            min = '2016-01-01', max = '2025-02-13', "
"0","                            start = '2016-01-02', end = '2016-12-14', "
"0","                            format = ""yyyy-mm-dd"", separator= ""a""),"
"0","             h5(""SELECCIONAR ALARMA""), "
"0","             uiOutput(""select_alarma_hist""), "
"0","             radioButtons(""tipo_grafico"", ""Seleccionar tipo de gráfico:"", "
"0","                          choices = c(""Histograma"" = ""hist"", ""Boxplot"" = ""boxplot"")),"
"0","             conditionalPanel("
"0","               condition = ""input.tipo_grafico == 'hist'"","
"0","               sliderInput(""slider1"", label = ""Número de bins del histograma"", "
"0","                           min = 1, max = 10, value = 5, step = 1)"
"0","             ),"
"0","             conditionalPanel("
"0","               condition = ""input.tipo_grafico == 'boxplot'"","
"0","               checkboxInput(""Caja1"", ""Todas las máquinas"", value = FALSE)"
"0","             )"
"0","           ),"
"0","           mainPanel("
"0","             conditionalPanel("
"0","               condition = ""input.tipo_grafico == 'hist'"","
"0","               h5(""Histograma de la alarma seleccionada""),"
"0","               plotOutput('hist1')"
"0","             ),"
"0","             conditionalPanel("
"0","               condition = ""input.tipo_grafico == 'boxplot'"","
"0","               h5(""Boxplot de la alarma seleccionada""),"
"0","               plotOutput('boxplot1')"
"0","             )"
"0","           )"
"0","         )"
"0",")"
"0",")"
"2","Aviso: Navigation containers expect a collection of `bslib::nav_panel()`/`shiny::tabPanel()`s and/or `bslib::nav_menu()`/`shiny::navbarMenu()`s. Consider using `header` or `footer` if you wish to place content above (or below) every panel's contents."
"0","server <- function(input, output, session) {"
"0","  "
"0","  df_react <- reactive({"
"0","    req(input$DatosFichero)"
"0",""
"0","    extension <- tools::file_ext(input$DatosFichero$name)"
"0","    "
"0","    # Comprobar si la extensión no es .Rdata"
"0","    if (extension != ""Rdata"") {"
"0","        showModal(modalDialog("
"0","            title = ""Formato de archivo incorrecto"","
"0","            ""El archivo proporcionado debe tener la extensión .Rdata."","
"0","            easyClose = TRUE,"
"0","            footer = NULL"
"0","        ))"
"0","        return(NULL)  # Detener la ejecución y evitar errores posteriores"
"0","    }"
"0","    "
"0","    load(input$DatosFichero$datapath)  # Cargar el archivo si es correcto"
"0","    return(Datos)  "
"0","})"
"0","  "
"0","  # SelectInput dinámico para matrícula"
"0","  output$select_matricula <- renderUI({"
"0","    datos <- df_react()"
"0","    selectInput(""Selectbox1"", ""Selecciona máquina"", choices = unique(datos$matricula))"
"0","  })"
"0","  "
"0","  df_maq <- reactive({"
"0","    datos <- df_react()"
"0","    req(input$Selectbox1)"
"0","    datos %>% filter(matricula == input$Selectbox1)"
"0","  })"
"0","  "
"0",""
"0",""
"0","  output$graf1 <- renderPlot({"
"0","    df_maq() %>% "
"0","      ggplot(aes(dia, p_orden, colour = p_orden)) + "
"0","      geom_point() + geom_line() + "
"0","      scale_color_gradient(low = ""blue"", high = ""red"") + "
"0","      labs(title = ""Evolución de la probabilidad de orden"", x = ""Día"", y = ""Probabilidad de orden"") +"
"0","      theme_minimal()"
"0","  })"
"0",""
"0","  output$select_alarmas_radio <- renderUI({"
"0","    datos <- df_maq()"
"0","    req(input$estado_alarma1)"
"0","    "
"0","    if (input$estado_alarma1 == ""activa"") {"
"0","      alarmas <- names(datos)[grep('^a.', names(datos))] %>% "
"0","        Filter(function(col) any(datos[[col]] == 1, na.rm = TRUE), .)"
"0","    } else {"
"0","      alarmas <- names(datos)[grep('^a.', names(datos))] %>% "
"0","        Filter(function(col) all(datos[[col]] == 0, na.rm = TRUE), .)"
"0","    }"
"0","    "
"0","    radioButtons(""radiobuttons1"", ""Selecciona la alarma a visualizar"", choices = alarmas)"
"0","  })"
"0",""
"0","  output$select_alarmas_check <- renderUI({"
"0","    datos <- df_maq()"
"0","    req(input$estado_alarma2)"
"0","    "
"0","    if (input$estado_alarma2 == ""activa"") {"
"0","      alarmas <- names(datos)[grep('^a.', names(datos))] %>% "
"0","        Filter(function(col) any(datos[[col]] == 1, na.rm = TRUE), .)"
"0","    } else {"
"0","      alarmas <- names(datos)[grep('^a.', names(datos))] %>% "
"0","        Filter(function(col) all(datos[[col]] == 0, na.rm = TRUE), .)"
"0","    }"
"0","    "
"0","    checkboxGroupInput(""GrupoCajas1"", ""Selecciona las alarmas para ver en la tabla"", choices = alarmas, inline = FALSE)"
"0","  })"
"0",""
"0","  output$graf2 <- renderPlotly({"
"0","    datos <- df_maq()"
"0","    req(input$radiobuttons1)  # Asegurar que haya una alarma seleccionada"
"0","    "
"0","    datos_filtrados <- datos %>% filter(!is.na(.data[[input$radiobuttons1]]))"
"0","    "
"0","    p <- ggplot(datos_filtrados, aes(x = dia, y = .data[[input$radiobuttons1]])) + "
"0","      geom_point() + "
"0","      geom_line() +"
"0","      theme_minimal() +"
"0","      labs(title = ""Gráfico de Alarma"", x = ""Día"", y = input$radiobuttons1)"
"0","    "
"0","    ggplotly(p)"
"0","  })"
"0",""
"0","  "
"0","  output$tabla1 <- renderDataTable({"
"0","    req(df_react(), input$Selectbox1, input$GrupoCajas1)"
"0","    subset(df_react(), matricula == input$Selectbox1, select = c(""matricula"", ""dia"", input$GrupoCajas1, ""p_orden""))"
"0","  })"
"0",""
"0","  # SelectInput dinámico para histograma/boxplot"
"0","  output$select_alarma_hist <- renderUI({"
"0","    datos <- df_react()"
"0","    alarmas <- grep('^a.', colnames(datos), value = TRUE)"
"0","    selectInput(""Selectbox2"", ""Alarma"", choices = alarmas)"
"0","  })"
"0",""
"0","  datos_alarma <- reactive({"
"0","    req(input$Selectbox2, input$rango_fecha)"
"0","    df_maq() %>% "
"0","      filter(dia >= input$rango_fecha[1], dia <= input$rango_fecha[2]) %>% "
"0","      select(.data[[input$Selectbox2]]) %>% "
"0","      drop_na()"
"0","  })"
"0",""
"0","  output$hist1 <- renderPlot({"
"0","    req(input$Selectbox2, input$rango_fecha)"
"0","    datos <- datos_alarma()"
"0","    "
"0","    ggplot(datos, aes(x = .data[[input$Selectbox2]])) + "
"0","      geom_histogram(binwidth = diff(range(datos[[input$Selectbox2]]))/input$slider1, "
"0","                     fill = ""steelblue"", color = ""black"", alpha = 0.7)"
"0","  })"
"0",""
"0","  output$boxplot1 <- renderPlot({"
"0","    req(input$rango_fecha, input$Selectbox2)"
"0","    datos <- df_react() %>%"
"0","      filter(dia >= input$rango_fecha[1], dia <= input$rango_fecha[2]) %>%"
"0","      select(matricula, dia, .data[[input$Selectbox2]]) %>%"
"0","      drop_na()"
"0","    "
"0","    if (input$Caja1) {"
"0","      ggplot(datos, aes(x = matricula, y = .data[[input$Selectbox2]])) + "
"0","        geom_boxplot(fill = ""steelblue"", color = ""black"", alpha = 0.7) +"
"0","        labs(title = paste(""Boxplots de"", input$Selectbox2, ""para todas las máquinas""), "
"0","             x = ""Máquina"", y = input$Selectbox2) +"
"0","        theme_minimal() +"
"0","        theme(axis.text.x = element_text(angle = 90, hjust = 1))"
"0","    } else {"
"0","      datos %>% ggplot(aes(y = .data[[input$Selectbox2]])) + "
"0","        geom_boxplot(fill = ""steelblue"", color = ""black"", alpha = 0.7) +"
"0","        labs(title = paste(""Boxplot de"", input$Selectbox2, ""para la máquina seleccionada""), "
"0","             x = """", y = input$Selectbox2) +"
"0","        theme_minimal()"
"0","    }"
"0","  })"
"0","  "
"0","}"
"0",""
"0",""
"0",""
"0","shinyApp(ui, server)"
"2","
Listening on http://127.0.0.1:4295
"
